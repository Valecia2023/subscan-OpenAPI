// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/check_hash": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Check hash",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.checkHashParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/now": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "common"
                ],
                "summary": "current timestamp",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/account/contributions": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Account crowdloan contributions",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.accountCrowdloanContributionsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/account/referendum": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Account referendum list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.accountReferendumParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/account/reward_slash": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Reward or slash list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.rewardSlashParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/account/tokens": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Account token list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.accountTokenParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/accounts/statistics": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Account statistics",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.accountsStatisticsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/assets/account/balances": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Asset account balances",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_assets_http.assetBalancesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/assets/activities": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Asset activities",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_assets_http.assetActivitiesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/assets/all": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Assets list all",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/assets/asset": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Asset info",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_assets_http.assetParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/assets/asset/holders": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Asset holders",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_assets_http.assetHolderParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/assets/assets": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Assets list",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_assets_http.assetsParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/assets/transfers": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Asset transfers",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_assets_http.assetTransfersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/block": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Block detail",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.blockParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/block/header": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Block header",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.blockHeaderParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/bounties/proposal": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Bounty info",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.bountyParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/bounties/proposals": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Bounty list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.bountiesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/collator/info": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collator"
                ],
                "summary": "Collator Info",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_pluginv2_pallets_collator.collatorInfoParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/collator/list": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collator"
                ],
                "summary": "Collator List",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_pluginv2_pallets_collator.collatorListParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/collator/meta": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collator"
                ],
                "summary": "Collator Meta",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/contracts/events": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Contract Events",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.contractsEventsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/contracts/info": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Contract meta",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.contractInfoParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/contracts/list": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Contract List",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.contractsListParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/contracts/meta": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Contract meta",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/contracts/timeline": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Contract Timeline",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.contractTimelineParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/contracts/transactions": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Contract transactions",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.contractTxsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/contracts/verify/compiler_version": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Compiler versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/council/proposal": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Council proposal",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.councilProposalParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/council/proposals": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Council proposals",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.councilProposalsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/daily": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stat"
                ],
                "summary": "Daily stat",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.dailyStatParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/daily_token": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stat"
                ],
                "summary": "Daily token stat",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.dailyTokenStatParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/democracy/proposal": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Democracy details",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.democracyParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/democracy/proposals": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Democracies list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.democraciesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/democracy/referendum": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Referendum list(legacy)",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.referendumParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/democracy/referendums": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Referendums",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.referendumsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/democracy/seconded": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Democracy seconded list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.democracySecondedParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/democracy/votes": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Referendum votes list(legacy)",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.referendumVotesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/download/progress": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Download progress",
                "parameters": [
                    {
                        "type": "string",
                        "description": "download key",
                        "name": "key",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "timeout",
                        "name": "timeout",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/event": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Event by index",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.eventInfoParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/event/params": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Event params by index",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.eventParamsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/abi": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "ABI by method id or event topic",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmAbiSearchParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/account/tokens": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM account tokens",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EVMAccountTokensParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/block": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "Evm block by block number",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EVMBlockParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/blocks": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM Blocks",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmBlocksParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/contract": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM contract detail",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmContractParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/contract/list": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM contract list",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmContractListParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/contract/solcs": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM contract solc versions",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmContractSolcVersionsParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/erc721/collectible": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM erc721 collectible detail",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmErc721CollectibleParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/erc721/collectibles": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM erc721 collectibles",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmErc721CollectiblesParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/logs": {
            "post": {
                "description": "EVM event Logs，returns the event logs from an address. The current maximum limit for the number of results returned through pagination is 10,000. If you require more, please adjust the block_range parameter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM event Logs",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmEventLogsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/meta": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "Evm meta",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/token/holders": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM token holders",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmTokenHoldersParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/token/transfer": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM token transfer",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmTokenTransferParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/tokens": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM erc20/erc721 tokens",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmTokensParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/transaction": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM transaction info",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EVMTransactionParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscan_internal_plugin_share.J"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/v2/transactions": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "Evm transactions",
                "parameters": [
                    {
                        "description": "body",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmTransactionsParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/extrinsic": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "extrinsic"
                ],
                "summary": "Extrinsic detail",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.ExtrinsicDetailParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/fellowship/referendum": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Fellowship referenda details",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.fellowshipReferendumParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/fellowship/referendums": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Fellowship referenda list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.fellowshipReferendumsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/fellowship/statistics": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Fellowship referendum statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/fellowship/tracks": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Fellowship referendum tracks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/fellowship/votes": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Fellowship referendum votes",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.fellowshipReferendumVotesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/log": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "log"
                ],
                "summary": "Block log by index",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.logInfoParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/metadata": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Current network metadata",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/multiChain/account": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "multiChain"
                ],
                "summary": "MultiChain account",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.multiChainAccountParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/multiChain/balance_value_history": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "multiChain"
                ],
                "summary": "Account balance value history",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.accountBalanceValueHistoryParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/multiChain/balance_value_stat": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "multiChain"
                ],
                "summary": "Account balance value stat",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.accountBalanceValueStatParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/multiChain/identities": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "multiChain"
                ],
                "summary": "MultiChain identities",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.identitiesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/multiChain/price": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "multiChain"
                ],
                "summary": "MultiChain price",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.identitiesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/multiTokens/account/balances": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enjin"
                ],
                "summary": "Enjin multiToken holder balance",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_enjin_multiTokens_http.EnjinMultiTokenHolderBalanceParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscan_internal_plugin_share.J"
                        }
                    }
                }
            }
        },
        "/api/scan/multiTokens/activities": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enjin"
                ],
                "summary": "Enjin multiToken activities",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_enjin_multiTokens_http.EnjinMultiTokenActivitiesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscan_internal_plugin_share.J"
                        }
                    }
                }
            }
        },
        "/api/scan/multiTokens/holders": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enjin"
                ],
                "summary": "Enjin multiToken holders",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_enjin_multiTokens_http.EnjinMultiTokenHoldersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscan_internal_plugin_share.J"
                        }
                    }
                }
            }
        },
        "/api/scan/multiTokens/info": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enjin"
                ],
                "summary": "Enjin multiToken info",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_enjin_multiTokens_http.EnjinMultiTokeInfoParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscan_internal_plugin_share.J"
                        }
                    }
                }
            }
        },
        "/api/scan/multiTokens/info/item": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enjin"
                ],
                "summary": "Enjin multiToken item detail",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_enjin_multiTokens_http.EnjinMultiTokenItemParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscan_internal_plugin_share.J"
                        }
                    }
                }
            }
        },
        "/api/scan/multiTokens/items": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enjin"
                ],
                "summary": "Enjin multiToken item all",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_enjin_multiTokens_http.EnjinMultiTokenItemsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscan_internal_plugin_share.J"
                        }
                    }
                }
            }
        },
        "/api/scan/multiTokens/list": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enjin"
                ],
                "summary": "Enjin multiToken list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_enjin_multiTokens_http.EnjinMultiTokenParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscan_internal_plugin_share.J"
                        }
                    }
                }
            }
        },
        "/api/scan/multisig": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "multisig"
                ],
                "summary": "Multisig extrinsic",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.multisigParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/multisigs": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "multisig"
                ],
                "summary": "Multisig extrinsic list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.multisigParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/multisigs/details": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "multisig"
                ],
                "summary": "Multisig extrinsic details list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.multisigsDetailsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/nomination_pool/activities": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominationPools"
                ],
                "summary": "Nomination Pools Activities",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_pluginv2_pallets_nominationPool.nominationPoolsActivitiesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/nomination_pool/pool": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominationPools"
                ],
                "summary": "Nomination Pools Info",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_pluginv2_pallets_nominationPool.nominationPoolsInfoParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/nomination_pool/pool/member/vote": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominationPools"
                ],
                "summary": "Nomination Pools Member Vote",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_pluginv2_pallets_nominationPool.nominationPoolsMemberVoteParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/nomination_pool/pool/members": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominationPools"
                ],
                "summary": "Nomination Pools Members",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_pluginv2_pallets_nominationPool.nominationPoolsMembersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/nomination_pool/pools": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominationPools"
                ],
                "summary": "Nomination Pools List",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_pluginv2_pallets_nominationPool.nominationPoolsListParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/nomination_pool/rewards": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominationPools"
                ],
                "summary": "Nomination Pools Rewards",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_pluginv2_pallets_nominationPool.nominationPoolsRewardsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/open/currencies": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "currency"
                ],
                "summary": "supported currencies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/open/price": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "currency"
                ],
                "summary": "currency price",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.currencyPriceParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/open/price_converter": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "currency"
                ],
                "summary": "currency price converter",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.currencyConverterParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/auctionCompetitors": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Auction competitors",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.auctionCompetitorsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/auction_funds_stat": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Auction funds stat",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.auctionFundsStatParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/auction_leading_blocks": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Auction leading blocks",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.auctionLeadingBlocksParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/auctions": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "PLO auctions list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.parachainAuctionsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/bestBid": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Best bid",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.bestBidParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/bids": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "PLO slot bids list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.parachainSlotBidsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/contributes": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Crowdloan fund contributes list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.parachainFundContributesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/fundStat": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Crowdloan fund stat",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.parachainFundContributesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/funds": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Crowdloan funds list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.crowdloanFundsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/info": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Parachain info",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.parachainInfoParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/list": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Parachain list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.paraChainListParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/meta": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Parachain meta",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/predict": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Winner predict",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.winnerPredictParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/registerinfo": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Parachain register info",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/pendingExtrinsics": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "extrinsic"
                ],
                "summary": "Pending extrinsic",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/preimage/details": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Preimage details",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.preimageDetailsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/preimage/list": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Preimage list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.preimageListParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/price/history": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stat"
                ],
                "summary": "Price history",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.priceHistoryParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/proxy/extrinsics": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proxy"
                ],
                "summary": "Proxy extrinsics",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.proxyExtrinsicsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/referenda/referendum": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Referenda details",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.referendumV2Params"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/referenda/referendums": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Referenda list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.referendumsV2Params"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/referenda/statistics": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Referendum statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/referenda/tracks": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Referendum tracks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/referenda/votes": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Referenda votes list(v2)",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.referendaVotesV2Params"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/resource_count": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Resource count",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.ResourceCountParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/runtime/list": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "runtime"
                ],
                "summary": "Runtime list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/runtime/metadata": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "runtime"
                ],
                "summary": "Runtime metadata",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.runtimeMetadataParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/staking/era_stat": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Era stat list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.eraStatParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/staking/nominator": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Nominator info",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.nominatorParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/staking/nominators": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Nominators list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.nominatorsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/staking/unbonding": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Unbonding list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.unbondingParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/staking/validator": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Validator info",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.validatorParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/staking/validators": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Validators list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.validatorsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/staking/voted": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Voted validators list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.votedParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/staking/waiting": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Waiting validators list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.waitingValidatorsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/staking_history": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Staking reward sum",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/swork/daily": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crustStorage"
                ],
                "summary": "Crust storage daily stat",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_crust_swork_http.CrustStorageDailyStatParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/swork/group": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crustStorage"
                ],
                "summary": "Crust storage group detail",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_crust_swork_http.CrustGroupParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/swork/group/members": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crustStorage"
                ],
                "summary": "Crust storage group members",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_crust_swork_http.CrustMembersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/swork/groups": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crustStorage"
                ],
                "summary": "Crust storage groups",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_crust_swork_http.CrustGroupsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/swork/member": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crustStorage"
                ],
                "summary": "Crust storage group member detail",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_crust_swork_http.CrustMemberParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/swork/member/files": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crustStorage"
                ],
                "summary": "Crust storage group member files",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_crust_swork_http.CrustFilesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/swork/member/orders": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crustStorage"
                ],
                "summary": "Crust storage group member orders",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_crust_swork_http.CrustMemberOrdersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/swork/orders": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crustStorage"
                ],
                "summary": "Crust storage orders",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_crust_swork_http.CrustOrdersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/techcomm/proposal": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Techcomm proposal",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.techcommProposalParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/techcomm/proposals": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Techcomm proposals",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.techcommProposalsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/token": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "Token list(token symbol)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/token/holders": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Token holders list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.tokenHoldersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/token/unique_id": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "Token list(token unique_id)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/treasury/proposal": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Treasury proposal",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.treasuryProposalParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/treasury/proposals": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Treasury proposals",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.treasuryProposalsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/treasury/tip": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Treasury tip",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.treasuryTipParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/treasury/tippers": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Treasury tippers",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.treasuryTipperParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/treasury/tips": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Treasury tips",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.treasuryTipsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/uniques/account/balances": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniques"
                ],
                "summary": "Uniques holders item balances",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_uniques_http.UniquesBalancesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/uniques/activities": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniques"
                ],
                "summary": "Uniques activities",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_uniques_http.UniquesActivitiesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/uniques/all": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniques"
                ],
                "summary": "Uniques list all",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/uniques/unique": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniques"
                ],
                "summary": "Uniques info",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_uniques_http.uniqueParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/uniques/unique/holders": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniques"
                ],
                "summary": "Uniques holders",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_uniques_http.UniquesHoldersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/uniques/unique/item": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniques"
                ],
                "summary": "Uniques item info",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_uniques_http.uniqueItemParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/uniques/unique/items": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniques"
                ],
                "summary": "Uniques items",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_uniques_http.uniqueItemsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/uniques/uniques": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniques"
                ],
                "summary": "Uniques list",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_uniques_http.uniquesListParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/vesting_release": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vesting"
                ],
                "summary": "Vesting release list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.vestingReleaseParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/v2/scan/account/reward_slash": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Account reward and slash list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.rewardSlashV2Params"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/v2/scan/accounts": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Accounts list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.accountsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/v2/scan/blocks": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Blocks list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.blocksParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/v2/scan/daily": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stat"
                ],
                "summary": "Daily stat(v2)",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.dailyStatV2Param"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v2/scan/extrinsics": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "extrinsic"
                ],
                "summary": "Extrinsics list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.extrinsicsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/v2/scan/logs": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "log"
                ],
                "summary": "Logs list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.logsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/v2/scan/token/native": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Native token list",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.tokenNativeParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v2/scan/token/providers": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Tokens providers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v2/scan/token/search": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Tokens search",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.tokensSearchParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v2/scan/tokens": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Tokens(v2)",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.tokensV2Param"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v2/scan/transfers": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Transfers list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.transfersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/readiness": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Readiness Probe",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_plugin_assets_http.assetActivitiesParams": {
            "type": "object",
            "properties": {
                "asset_id": {
                    "type": "number"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_assets_http.assetBalancesParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_plugin_assets_http.assetHolderParams": {
            "type": "object",
            "properties": {
                "asset_id": {
                    "type": "number"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_assets_http.assetParam": {
            "type": "object",
            "properties": {
                "asset_id": {
                    "type": "number"
                }
            }
        },
        "internal_plugin_assets_http.assetTransfersParams": {
            "type": "object",
            "required": [
                "asset_id"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "after_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "asset_id": {
                    "type": "string"
                },
                "block_range": {
                    "type": "string"
                },
                "direction": {
                    "type": "string",
                    "enum": [
                        "all",
                        "sent",
                        "received"
                    ]
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "include_total": {
                    "type": "boolean"
                },
                "max_amount": {
                    "type": "string"
                },
                "min_amount": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "internal_plugin_assets_http.assetsParam": {
            "type": "object",
            "properties": {
                "asset_id": {
                    "type": "number"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "search": {
                    "description": "assets symbol or name",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                }
            }
        },
        "internal_plugin_crust_swork_http.CrustFilesParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_crust_swork_http.CrustGroupParams": {
            "type": "object",
            "required": [
                "group_owner"
            ],
            "properties": {
                "group_owner": {
                    "type": "string"
                }
            }
        },
        "internal_plugin_crust_swork_http.CrustGroupsParams": {
            "type": "object",
            "properties": {
                "group_owner": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "power",
                        "total_stake",
                        "members",
                        "cap"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_crust_swork_http.CrustMemberOrdersParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "all_orders": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_crust_swork_http.CrustMemberParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_plugin_crust_swork_http.CrustMembersParams": {
            "type": "object",
            "required": [
                "group_owner"
            ],
            "properties": {
                "group_owner": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_crust_swork_http.CrustOrdersParams": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "expired_status": {
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_crust_swork_http.CrustStorageDailyStatParams": {
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "properties": {
                "category": {
                    "type": "string",
                    "enum": [
                        "nodes",
                        "storage",
                        "files"
                    ]
                },
                "end": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "internal_plugin_enjin_multiTokens_http.EnjinMultiTokeInfoParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "description": "multiToken collection id",
                    "type": "number"
                }
            }
        },
        "internal_plugin_enjin_multiTokens_http.EnjinMultiTokenActivitiesParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "description": "multiToken collection id",
                    "type": "number"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "token_id": {
                    "description": "Optional. filter by token id",
                    "type": "integer"
                }
            }
        },
        "internal_plugin_enjin_multiTokens_http.EnjinMultiTokenHolderBalanceParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_plugin_enjin_multiTokens_http.EnjinMultiTokenHoldersParams": {
            "type": "object",
            "required": [
                "collection_id"
            ],
            "properties": {
                "collection_id": {
                    "description": "multiToken collection id",
                    "type": "number"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "token_id": {
                    "description": "optional. filter by token id",
                    "type": "number"
                }
            }
        },
        "internal_plugin_enjin_multiTokens_http.EnjinMultiTokenItemParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number"
                },
                "token_id": {
                    "type": "number"
                }
            }
        },
        "internal_plugin_enjin_multiTokens_http.EnjinMultiTokenItemsParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "description": "Optional. multiToken collection id",
                    "type": "number"
                },
                "order": {
                    "description": "Optional, order sort, default desc",
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "description": "Optional, order field",
                    "type": "string",
                    "enum": [
                        "holders",
                        "item_id"
                    ]
                },
                "owner": {
                    "description": "Optional. multiToken owner address. Only support ss58 address",
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_enjin_multiTokens_http.EnjinMultiTokenParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "description": "Optional, multiToken collection id",
                    "type": "number"
                },
                "order": {
                    "description": "Optional, order sort, default desc",
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "description": "Optional, order field",
                    "type": "string",
                    "enum": [
                        "items",
                        "holders",
                        "collection_id",
                        "transfer_count"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "search": {
                    "description": "Optional, multiToken collection name",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                }
            }
        },
        "internal_plugin_evm_http.EVMAccountTokensParam": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_plugin_evm_http.EVMBlockParam": {
            "type": "object",
            "properties": {
                "block_num": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "internal_plugin_evm_http.EVMTransactionParam": {
            "type": "object",
            "properties": {
                "extrinsic_index": {
                    "description": "Optional, ExtrinsicIndex, such as 4780334-2",
                    "type": "string",
                    "example": "4780334-2"
                },
                "hash": {
                    "description": "Optional, Also known as Transaction ID (TxID).",
                    "type": "string",
                    "example": "0x09bc77f61a670ea22b66e1e440d2c2163fb43e11974e3563109630571fae42ac"
                }
            }
        },
        "internal_plugin_evm_http.EvmAbiSearchParams": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_plugin_evm_http.EvmBlocksParams": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_evm_http.EvmContractListParam": {
            "type": "object",
            "properties": {
                "contracts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "balances",
                        "verify_time",
                        "transaction_count"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "search": {
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "internal_plugin_evm_http.EvmContractParam": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_plugin_evm_http.EvmContractSolcVersionsParam": {
            "type": "object",
            "properties": {
                "releases": {
                    "type": "boolean"
                }
            }
        },
        "internal_plugin_evm_http.EvmErc721CollectibleParam": {
            "type": "object",
            "required": [
                "token_id"
            ],
            "properties": {
                "contract": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "internal_plugin_evm_http.EvmErc721CollectiblesParam": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "internal_plugin_evm_http.EvmEventLogsParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "example": "0x4d73adb72bc3dd368966edd0f0b2148401a178e2"
                },
                "block_range": {
                    "type": "string",
                    "example": "400000-400001"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_evm_http.EvmTokenHoldersParam": {
            "type": "object",
            "properties": {
                "contract": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_evm_http.EvmTokenTransferParam": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "category": {
                    "type": "string",
                    "enum": [
                        "erc20",
                        "erc721"
                    ]
                },
                "contract": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "internal_plugin_evm_http.EvmTokensParam": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "enum": [
                        "erc20",
                        "erc721"
                    ]
                },
                "contracts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "holders",
                        "transfer_count",
                        "symbol"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "search": {
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                }
            }
        },
        "internal_plugin_evm_http.EvmTransactionsParam": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "after_id": {
                    "type": "integer"
                },
                "block_num": {
                    "type": "integer",
                    "minimum": 1
                },
                "block_range": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "internal_plugin_uniques_http.UniquesActivitiesParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number"
                },
                "item_id": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_uniques_http.UniquesBalancesParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_plugin_uniques_http.UniquesHoldersParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_uniques_http.uniqueItemParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number"
                },
                "item_id": {
                    "type": "integer"
                }
            }
        },
        "internal_plugin_uniques_http.uniqueItemsParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number"
                },
                "owner": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_uniques_http.uniqueParam": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number"
                }
            }
        },
        "internal_plugin_uniques_http.uniquesListParam": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "search": {
                    "description": "uniques name",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                }
            }
        },
        "internal_pluginv2_pallets_collator.Status": {
            "type": "integer",
            "enum": [
                1,
                2
            ],
            "x-enum-varnames": [
                "Invulnerable",
                "Candidate"
            ]
        },
        "internal_pluginv2_pallets_collator.collatorInfoParams": {
            "type": "object",
            "required": [
                "account"
            ],
            "properties": {
                "account": {
                    "type": "string"
                }
            }
        },
        "internal_pluginv2_pallets_collator.collatorListParams": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "account",
                        "bond",
                        "last_change_block",
                        "last_authored_block"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "status": {
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/internal_pluginv2_pallets_collator.Status"
                        }
                    ]
                }
            }
        },
        "internal_pluginv2_pallets_nominationPool.nominationPoolsActivitiesParams": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "pool_id": {
                    "type": "integer"
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_pluginv2_pallets_nominationPool.nominationPoolsInfoParams": {
            "type": "object",
            "properties": {
                "pool_id": {
                    "type": "integer"
                }
            }
        },
        "internal_pluginv2_pallets_nominationPool.nominationPoolsListParams": {
            "type": "object",
            "properties": {
                "state": {
                    "type": "string",
                    "enum": [
                        "Destroying",
                        "Open",
                        "Blocked",
                        "Destroyed"
                    ]
                }
            }
        },
        "internal_pluginv2_pallets_nominationPool.nominationPoolsMemberVoteParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_pluginv2_pallets_nominationPool.nominationPoolsMembersParams": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "pool_id": {
                    "type": "integer"
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_pluginv2_pallets_nominationPool.nominationPoolsRewardsParams": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "pool_id": {
                    "type": "integer"
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.ExtrinsicDetailParams": {
            "type": "object",
            "properties": {
                "events_limit": {
                    "type": "integer"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "focus": {
                    "description": "only using for subscan",
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "only_extrinsic_event": {
                    "type": "boolean"
                }
            }
        },
        "internal_server_http.ResourceCountParams": {
            "type": "object",
            "required": [
                "resource"
            ],
            "properties": {
                "account": {
                    "type": "string"
                },
                "extra": {
                    "type": "object",
                    "additionalProperties": true
                },
                "resource": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_server_http.accountBalanceValueHistoryParams": {
            "type": "object",
            "required": [
                "address",
                "end",
                "start"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.accountBalanceValueStatParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.accountCrowdloanContributionsParams": {
            "type": "object",
            "required": [
                "who"
            ],
            "properties": {
                "include_total": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "who": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.accountReferendumParams": {
            "type": "object",
            "required": [
                "account"
            ],
            "properties": {
                "account": {
                    "type": "string"
                },
                "module": {
                    "type": "string",
                    "enum": [
                        "democracy",
                        "referendum"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.accountTokenParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.accountsParams": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                },
                "filter": {
                    "type": "string",
                    "enum": [
                        "validator",
                        "nominator",
                        "councilMember",
                        "techcomm",
                        "registrar",
                        "system",
                        "module",
                        "evm",
                        "nominationPool",
                        "proxies",
                        "proxy",
                        "multisig",
                        "multisigMember",
                        "fellowship",
                        "onChainIdentity",
                        "convictionDelegate",
                        "convictionDelegated",
                        "democracyDelegate",
                        "democracyDelegated"
                    ]
                },
                "max_balance": {
                    "type": "string"
                },
                "min_balance": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "balance",
                        "locked",
                        "ring_lock"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.accountsStatisticsParams": {
            "type": "object",
            "properties": {
                "exclude_system": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "assets",
                        "role"
                    ]
                }
            }
        },
        "internal_server_http.auctionCompetitorsParams": {
            "type": "object",
            "properties": {
                "auction_index": {
                    "type": "integer"
                },
                "includingFund": {
                    "type": "boolean"
                }
            }
        },
        "internal_server_http.auctionFundsStatParams": {
            "type": "object",
            "properties": {
                "auction_id": {
                    "type": "integer"
                },
                "end": {
                    "type": "string"
                },
                "format": {
                    "type": "string",
                    "enum": [
                        "day",
                        "hour",
                        "6hour"
                    ]
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.auctionLeadingBlocksParams": {
            "type": "object",
            "required": [
                "auction_id"
            ],
            "properties": {
                "auction_id": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.bestBidParams": {
            "type": "object",
            "required": [
                "bid_id"
            ],
            "properties": {
                "bid_id": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.blockHeaderParams": {
            "type": "object",
            "properties": {
                "block_num": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 10000
                }
            }
        },
        "internal_server_http.blockParams": {
            "type": "object",
            "properties": {
                "block_hash": {
                    "type": "string",
                    "example": "0xa8cba357ea4a7d160eb98d37979dffd7213b1dad592a551b391f96c51b19020b"
                },
                "block_num": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 10000
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "only_head": {
                    "type": "boolean"
                }
            }
        },
        "internal_server_http.blocksParams": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.bondStatParams": {
            "type": "object",
            "required": [
                "stash"
            ],
            "properties": {
                "stash": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.bountiesParams": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "historical",
                        "active"
                    ]
                }
            }
        },
        "internal_server_http.bountyParams": {
            "type": "object",
            "properties": {
                "proposal_id": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "internal_server_http.checkHashParam": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.contractInfoParams": {
            "type": "object",
            "properties": {
                "contract": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.contractTimelineParams": {
            "type": "object",
            "properties": {
                "contract": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.contractTxsParams": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "block_range": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "result": {
                    "type": "boolean"
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.contractsEventsParams": {
            "type": "object",
            "properties": {
                "contract": {
                    "type": "string"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.contractsListParams": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "verify_time",
                        "transaction_count"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "internal_server_http.councilProposalParams": {
            "type": "object",
            "properties": {
                "proposal_id": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "internal_server_http.councilProposalsParams": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.crowdloanFundsParams": {
            "type": "object",
            "properties": {
                "auction_index": {
                    "type": "integer"
                },
                "bid_id": {
                    "type": "string"
                },
                "first_period": {
                    "type": "integer"
                },
                "from_block": {
                    "type": "integer"
                },
                "from_history": {
                    "type": "boolean"
                },
                "fund_id": {
                    "type": "string"
                },
                "last_period": {
                    "type": "integer"
                },
                "order": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "para_id": {
                    "type": "integer"
                },
                "para_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "progress": {
                    "type": "boolean"
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "status": {
                    "type": "integer"
                },
                "statuses": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "to_block": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.currencyConverterParams": {
            "type": "object",
            "required": [
                "from",
                "quote",
                "value"
            ],
            "properties": {
                "from": {
                    "type": "string"
                },
                "quote": {
                    "type": "string"
                },
                "time": {
                    "type": "integer"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "internal_server_http.currencyPriceParams": {
            "type": "object",
            "properties": {
                "base": {
                    "type": "string"
                },
                "quote": {
                    "type": "string",
                    "enum": [
                        "USD"
                    ]
                },
                "time": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "internal_server_http.dailyStatParams": {
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "format": {
                    "type": "string",
                    "enum": [
                        "day",
                        "hour",
                        "6hour"
                    ]
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.dailyStatV2Param": {
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "format": {
                    "type": "string",
                    "enum": [
                        "day",
                        "hour",
                        "6hour"
                    ]
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.dailyTokenStatParams": {
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "properties": {
                "end": {
                    "type": "string"
                },
                "format": {
                    "type": "string",
                    "enum": [
                        "day"
                    ]
                },
                "start": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.democraciesParams": {
            "type": "object",
            "properties": {
                "order_field": {
                    "type": "string",
                    "enum": [
                        "seconded_count",
                        "proposal_id"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "historical",
                        "active"
                    ]
                }
            }
        },
        "internal_server_http.democracyParams": {
            "type": "object",
            "properties": {
                "democracy_id": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "internal_server_http.democracySecondedParams": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "proposal_id": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.eraStatParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.eventInfoParams": {
            "type": "object",
            "required": [
                "event_index"
            ],
            "properties": {
                "event_index": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.eventParamsParams": {
            "type": "object",
            "required": [
                "event_index"
            ],
            "properties": {
                "event_index": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_server_http.extrinsicParamsParams": {
            "type": "object",
            "required": [
                "extrinsic_index"
            ],
            "properties": {
                "extrinsic_index": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_server_http.extrinsicsParams": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "after_id": {
                    "type": "integer"
                },
                "block_num": {
                    "type": "integer",
                    "minimum": 0
                },
                "block_range": {
                    "type": "string"
                },
                "call": {
                    "type": "string"
                },
                "module": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "signed": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "timeout": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.fellowshipReferendumParams": {
            "type": "object",
            "properties": {
                "referendum_index": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "internal_server_http.fellowshipReferendumVotesParams": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "referendum_index": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.fellowshipReferendumsParams": {
            "type": "object",
            "properties": {
                "origin": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "completed",
                        "active"
                    ]
                }
            }
        },
        "internal_server_http.identitiesParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.logInfoParam": {
            "type": "object",
            "required": [
                "log_index"
            ],
            "properties": {
                "log_index": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.logsParams": {
            "type": "object",
            "properties": {
                "after_id": {
                    "type": "integer"
                },
                "block_num": {
                    "type": "integer",
                    "minimum": 0
                },
                "block_range": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.multiChainAccountParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.multisigParams": {
            "type": "object",
            "required": [
                "multi_id"
            ],
            "properties": {
                "call_hash": {
                    "type": "string"
                },
                "multi_id": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.multisigsDetailsParams": {
            "type": "object",
            "required": [
                "account"
            ],
            "properties": {
                "account": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Approval",
                        "Executed",
                        "Cancelled",
                        "Failed"
                    ]
                }
            }
        },
        "internal_server_http.nominatorParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.nominatorsParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "rank_nominator",
                        "bonded"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.paraChainListParams": {
            "type": "object",
            "properties": {
                "filter_anonymous": {
                    "type": "boolean"
                },
                "order": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "para_id": {
                    "type": "integer"
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_server_http.parachainAuctionsParams": {
            "type": "object",
            "properties": {
                "auction_index": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.parachainFundContributesParams": {
            "type": "object",
            "properties": {
                "from_history": {
                    "type": "boolean"
                },
                "fund_id": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "para_id": {
                    "type": "integer"
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "who": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.parachainInfoParams": {
            "type": "object",
            "properties": {
                "filter_anonymous": {
                    "type": "boolean"
                },
                "order": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "para_id": {
                    "type": "integer"
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_server_http.parachainSlotBidsParams": {
            "type": "object",
            "properties": {
                "auction_index": {
                    "type": "integer"
                },
                "bid_id": {
                    "type": "string"
                },
                "bidder": {
                    "type": "string"
                },
                "first_period": {
                    "type": "integer"
                },
                "from_block": {
                    "type": "integer"
                },
                "from_history": {
                    "type": "boolean"
                },
                "fund_id": {
                    "type": "string"
                },
                "last_period": {
                    "type": "integer"
                },
                "latest": {
                    "type": "boolean"
                },
                "order": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "para_id": {
                    "type": "integer"
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "source": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "to_block": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.preimageDetailsParams": {
            "type": "object",
            "required": [
                "hash"
            ],
            "properties": {
                "hash": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.preimageListParams": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "source": {
                    "type": "string",
                    "enum": [
                        "inline",
                        "preimage"
                    ]
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "cleared",
                        "unrequested",
                        "requested"
                    ]
                }
            }
        },
        "internal_server_http.priceHistoryParams": {
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "properties": {
                "currency": {
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "format": {
                    "type": "string",
                    "enum": [
                        "day",
                        "hour",
                        "6hour",
                        "12hour"
                    ]
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.proxyExtrinsicsParams": {
            "type": "object",
            "required": [
                "account"
            ],
            "properties": {
                "account": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.rawTxParams": {
            "type": "object",
            "properties": {
                "extrinsic_index": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.referendaVotesV2Params": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "referendum_index": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "sort": {
                    "type": "string",
                    "enum": [
                        "conviction",
                        "amount",
                        "votes"
                    ]
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Ayes",
                        "Nays",
                        "Abstains"
                    ]
                },
                "valid": {
                    "type": "string",
                    "enum": [
                        "valid",
                        "invalid"
                    ]
                }
            }
        },
        "internal_server_http.referendumParams": {
            "type": "object",
            "properties": {
                "referendum_index": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "internal_server_http.referendumV2Params": {
            "type": "object",
            "properties": {
                "referendum_index": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "internal_server_http.referendumVotesParams": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "referendum_index": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "sort": {
                    "type": "string",
                    "enum": [
                        "conviction",
                        "amount",
                        "votes"
                    ]
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Ayes",
                        "Nays"
                    ]
                },
                "valid": {
                    "type": "string",
                    "enum": [
                        "valid",
                        "invalid"
                    ]
                }
            }
        },
        "internal_server_http.referendumsParams": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "completed",
                        "active"
                    ]
                }
            }
        },
        "internal_server_http.referendumsV2Params": {
            "type": "object",
            "properties": {
                "origin": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "completed",
                        "active"
                    ]
                }
            }
        },
        "internal_server_http.rewardSlashParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "block_range": {
                    "type": "string"
                },
                "category": {
                    "type": "string",
                    "enum": [
                        "Reward",
                        "Slash"
                    ]
                },
                "is_stash": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "timeout": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.rewardSlashV2Params": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "block_range": {
                    "type": "string"
                },
                "category": {
                    "type": "string",
                    "enum": [
                        "Reward",
                        "Slash"
                    ]
                },
                "claimed_filter": {
                    "type": "string",
                    "enum": [
                        "unclaimed",
                        "claimed"
                    ]
                },
                "is_stash": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "timeout": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.runtimeMetadataParams": {
            "type": "object",
            "properties": {
                "spec": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.techcommProposalParams": {
            "type": "object",
            "properties": {
                "proposal_id": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "internal_server_http.techcommProposalsParams": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.tokenHoldersParams": {
            "type": "object",
            "properties": {
                "included_zero_balance": {
                    "type": "boolean"
                },
                "max_balance": {
                    "type": "number"
                },
                "min_balance": {
                    "type": "number"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "balance",
                        "locked"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "token": {
                    "type": "string"
                },
                "unique_id": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.tokenNativeParam": {
            "type": "object",
            "properties": {
                "include_extends": {
                    "type": "boolean"
                }
            }
        },
        "internal_server_http.tokensSearchParam": {
            "type": "object",
            "properties": {
                "include_extends": {
                    "type": "boolean"
                },
                "unique_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_server_http.tokensV2Param": {
            "type": "object",
            "properties": {
                "include_extends": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "provider": {
                    "type": "string"
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.transfersParams": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "after_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "asset_symbol": {
                    "type": "string"
                },
                "asset_unique_id": {
                    "type": "string"
                },
                "block_range": {
                    "type": "string"
                },
                "currency": {
                    "type": "string",
                    "enum": [
                        "token",
                        "usd"
                    ]
                },
                "direction": {
                    "type": "string",
                    "enum": [
                        "all",
                        "sent",
                        "received"
                    ]
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "include_total": {
                    "type": "boolean"
                },
                "item_id": {
                    "type": "integer"
                },
                "max_amount": {
                    "type": "string"
                },
                "min_amount": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "success": {
                    "type": "boolean"
                },
                "timeout": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.treasuryProposalParams": {
            "type": "object",
            "properties": {
                "proposal_id": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "internal_server_http.treasuryProposalsParams": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.treasuryTipParams": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.treasuryTipperParams": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.treasuryTipsParams": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.unbondingParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.validatorParams": {
            "type": "object",
            "required": [
                "stash"
            ],
            "properties": {
                "stash": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.validatorsParams": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "rank_validator",
                        "bonded_nominators",
                        "bonded_owner",
                        "count_nominators",
                        "validator_prefs_value",
                        "bonded_total"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 0
                }
            }
        },
        "internal_server_http.vestingReleaseParams": {
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "properties": {
                "end": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.votedParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.waitingValidatorsParams": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "bonded_nominators",
                        "bonded_owner",
                        "count_nominators",
                        "validator_prefs_value"
                    ]
                }
            }
        },
        "internal_server_http.winnerPredictParams": {
            "type": "object",
            "properties": {
                "auction_index": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_plugin_share.J": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "generated_at": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
