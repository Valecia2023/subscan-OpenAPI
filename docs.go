// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/now": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Common"
                ],
                "summary": "Get current timestamp",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/account/reward_slash": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "get reward or slash list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.rewardSlashParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/account/tokens": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get account token list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.accountTokenParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/accounts/statistics": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get accounts statistics",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.accountsStatisticsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/block": {
            "post": {
                "description": "Get block detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Get block detail",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.BlockParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/block/header": {
            "post": {
                "description": "Get block header",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Get block header",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.BlockHeaderParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/blocks": {
            "post": {
                "description": "Get block list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Get block list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.BlocksParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/contracts/events": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contracts"
                ],
                "summary": "Contract Events",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.contractsEventsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/contracts/info": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contracts"
                ],
                "summary": "Contract Meta",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.contractInfoParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/contracts/list": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contracts"
                ],
                "summary": "Contract List",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.contractsListParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/contracts/meta": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contracts"
                ],
                "summary": "Contract Meta",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/contracts/timeline": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contracts"
                ],
                "summary": "Contract Timeline",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.contractTimelineParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/contracts/transactions": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contracts"
                ],
                "summary": "Contract Transactions",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.contractTxsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/contracts/verify/compiler_version": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contracts"
                ],
                "summary": "compiler Versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/daily": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stat"
                ],
                "summary": "Get daily stat",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.dailyStatParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/daily_token": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stat"
                ],
                "summary": "Get daily token stat",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.dailyTokenStatParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/download/progress": {
            "get": {
                "description": "Get download progress",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Get download progress",
                "parameters": [
                    {
                        "type": "string",
                        "description": "download key",
                        "name": "key",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "timeout",
                        "name": "timeout",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/event": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Get event by index",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.EventParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/event/params": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Get event params by index",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.EventParamsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/events": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Get events",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.EventsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/extrinsic": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "extrinsic"
                ],
                "summary": "Get extrinsic detail",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.ExtrinsicDetailParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/extrinsics": {
            "post": {
                "description": "Get extrinsics list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "extrinsic"
                ],
                "summary": "Get extrinsics list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.ExtrinsicsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/log": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "log"
                ],
                "summary": "Get log by index",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.LogInfoParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/logs": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "log"
                ],
                "summary": "Get logs",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.LogParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/metadata": {
            "post": {
                "description": "Get current network metadata",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Get current network metadata",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/multisig": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "multisig"
                ],
                "summary": "get multisig extrinsic",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.multisigParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/multisigs": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "multisig"
                ],
                "summary": "get multisig extrinsic list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.multisigParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/multisigs/details": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "multisig"
                ],
                "summary": "get multisig extrinsic details list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.multisigsDetailsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/pendingExtrinsics": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "extrinsic"
                ],
                "summary": "get pending extrinsic",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/price/history": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stat"
                ],
                "summary": "Get price history",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.priceHistoryParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/proxy/extrinsics": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proxy"
                ],
                "summary": "get proxy extrinsics",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.proxyExtrinsicsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/runtime/list": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "runtime"
                ],
                "summary": "get runtime list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/runtime/metadata": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "runtime"
                ],
                "summary": "get runtime metadata",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.runtimeMetadataParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/staking/era_stat": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "get era stat list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.eraStatParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/staking/nominator": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "get nominator info",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.nominatorParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/staking/nominators": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "get nominators list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.nominatorsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/staking/unbonding": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "get unbonding list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.unbondingParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/staking/validator": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "get validator info",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.validatorParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/staking/validators": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "get validators list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.validatorsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/staking/voted": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "get voted validators list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.votedParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/staking/waiting": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "get waiting validators list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.waitingValidatorsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/staking_history": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "staking reward sum",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/token": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "get system and builtin token list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/token/holders": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get token holders list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.tokenHoldersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/token/unique_id": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "get system and builtin token list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/transfers": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transfer"
                ],
                "summary": "Get transfers",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.transfersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/search/check_hash": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Check Hash",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.checkHashParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/v2/scan/accounts": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get accounts list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.accountsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "description": "Health check",
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/readiness": {
            "get": {
                "description": "readiness Probe",
                "tags": [
                    "health"
                ],
                "summary": "readiness Probe",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_server_http.BlockHeaderParams": {
            "type": "object",
            "properties": {
                "block_num": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 10000
                }
            }
        },
        "internal_server_http.BlockParams": {
            "type": "object",
            "properties": {
                "block_hash": {
                    "type": "string",
                    "example": "0xa8cba357ea4a7d160eb98d37979dffd7213b1dad592a551b391f96c51b19020b"
                },
                "block_num": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 10000
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "only_head": {
                    "type": "boolean"
                }
            }
        },
        "internal_server_http.BlocksParams": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 100
                }
            }
        },
        "internal_server_http.EventParams": {
            "type": "object",
            "required": [
                "event_index"
            ],
            "properties": {
                "event_index": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.EventParamsParams": {
            "type": "object",
            "required": [
                "event_index"
            ],
            "properties": {
                "event_index": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_server_http.EventsParams": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "block_num": {
                    "type": "integer",
                    "minimum": 0
                },
                "block_range": {
                    "type": "string"
                },
                "call": {
                    "type": "string"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "finalized": {
                    "type": "boolean"
                },
                "from": {
                    "type": "integer"
                },
                "from_block": {
                    "type": "integer"
                },
                "module": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "phase": {
                    "type": "integer",
                    "enum": [
                        0,
                        1,
                        2
                    ]
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "to": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.ExtrinsicDetailParams": {
            "type": "object",
            "properties": {
                "events_limit": {
                    "type": "integer"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "focus": {
                    "description": "only using for subscan",
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "only_extrinsic_event": {
                    "type": "boolean"
                }
            }
        },
        "internal_server_http.ExtrinsicParamsParams": {
            "type": "object",
            "required": [
                "extrinsic_index"
            ],
            "properties": {
                "extrinsic_index": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_server_http.ExtrinsicsParams": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "block_num": {
                    "type": "integer",
                    "minimum": 0
                },
                "block_range": {
                    "type": "string"
                },
                "call": {
                    "type": "string"
                },
                "from": {
                    "type": "integer"
                },
                "module": {
                    "type": "string"
                },
                "no_params": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "signed": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "timeout": {
                    "type": "integer"
                },
                "to": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.GetRawTxParams": {
            "type": "object",
            "properties": {
                "extrinsic_index": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.LogInfoParam": {
            "type": "object",
            "required": [
                "log_index"
            ],
            "properties": {
                "log_index": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.LogParams": {
            "type": "object",
            "properties": {
                "block_num": {
                    "type": "integer",
                    "minimum": 0
                },
                "block_range": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "from": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "to": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.accountTokenParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.accountsParams": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                },
                "filter": {
                    "type": "string",
                    "enum": [
                        "validator",
                        "nominator",
                        "councilMember",
                        "techcomm",
                        "registrar",
                        "system",
                        "module",
                        "evm",
                        "nominationPool",
                        "proxies",
                        "proxy",
                        "multisig",
                        "multisigMember",
                        "fellowship",
                        "onChainIdentity"
                    ]
                },
                "max_balance": {
                    "type": "string"
                },
                "min_balance": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "balance",
                        "locked",
                        "ring_lock"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.accountsStatisticsParams": {
            "type": "object",
            "properties": {
                "exclude_system": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "assets",
                        "role"
                    ]
                }
            }
        },
        "internal_server_http.bondStatParams": {
            "type": "object",
            "required": [
                "stash"
            ],
            "properties": {
                "stash": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.checkHashParam": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.contractInfoParams": {
            "type": "object",
            "properties": {
                "contract": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.contractTimelineParams": {
            "type": "object",
            "properties": {
                "contract": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.contractTxsParams": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "block_range": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "result": {
                    "type": "boolean"
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.contractsEventsParams": {
            "type": "object",
            "properties": {
                "contract": {
                    "type": "string"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.contractsListParams": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "verify_time",
                        "transaction_count"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "internal_server_http.dailyStatParams": {
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "format": {
                    "type": "string",
                    "enum": [
                        "day",
                        "hour",
                        "6hour"
                    ]
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.dailyTokenStatParams": {
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "properties": {
                "end": {
                    "type": "string"
                },
                "format": {
                    "type": "string",
                    "enum": [
                        "day"
                    ]
                },
                "start": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.eraStatParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.multisigParams": {
            "type": "object",
            "required": [
                "multi_id"
            ],
            "properties": {
                "call_hash": {
                    "type": "string"
                },
                "multi_id": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.multisigsDetailsParams": {
            "type": "object",
            "required": [
                "account"
            ],
            "properties": {
                "account": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Approval",
                        "Executed",
                        "Cancelled",
                        "Failed"
                    ]
                }
            }
        },
        "internal_server_http.nominatorParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.nominatorsParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "rank_nominator",
                        "bonded"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.priceHistoryParams": {
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "properties": {
                "currency": {
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "format": {
                    "type": "string",
                    "enum": [
                        "day",
                        "hour",
                        "6hour",
                        "12hour"
                    ]
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.proxyExtrinsicsParams": {
            "type": "object",
            "required": [
                "account"
            ],
            "properties": {
                "account": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.rewardSlashParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "block_range": {
                    "type": "string"
                },
                "category": {
                    "type": "string",
                    "enum": [
                        "Reward",
                        "Slash"
                    ]
                },
                "is_stash": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "timeout": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.runtimeMetadataParams": {
            "type": "object",
            "properties": {
                "spec": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.tokenHoldersParams": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "balance",
                        "locked"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "token": {
                    "type": "string"
                },
                "unique_id": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.transfersParams": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "asset_symbol": {
                    "type": "string"
                },
                "asset_unique_id": {
                    "type": "string"
                },
                "direction": {
                    "type": "string",
                    "enum": [
                        "all",
                        "sent",
                        "received"
                    ]
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "from_block": {
                    "type": "integer"
                },
                "include_total": {
                    "type": "boolean"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "timeout": {
                    "type": "integer"
                },
                "to_block": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.unbondingParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.validatorParams": {
            "type": "object",
            "required": [
                "stash"
            ],
            "properties": {
                "stash": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.validatorsParams": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "rank_validator",
                        "bonded_nominators",
                        "bonded_owner",
                        "count_nominators",
                        "validator_prefs_value",
                        "bonded_total"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 0
                }
            }
        },
        "internal_server_http.votedParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.waitingValidatorsParams": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "bonded_nominators",
                        "bonded_owner",
                        "count_nominators",
                        "validator_prefs_value"
                    ]
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
